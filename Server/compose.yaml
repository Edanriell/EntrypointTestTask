services:
    server.api:
        image: ${DOCKER_REGISTRY-}serverapi
        container_name: Server.Api
        build:
            context: .
            dockerfile: Server.Api/Dockerfile
        depends_on:
            - server-db
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTP_PORTS=5000
            - ASPNETCORE_HTTPS_PORTS=5001
            - ASPNETCORE_Kestrel__Certificates__Default__Password=slr300hdg6m1239
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
            - ${USERPROFILE}\.aspnet\https:/https/
        #            - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
        ports:
            - 5000:5000
            - 5001:5001
    
    server-db:
        image: postgres:latest
        container_name: Server.Db
        environment:
            - POSTGRES_DB=server
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        volumes:
            - ./.containers/database:/var/lib/postgresql/data
        ports:
            - 5432:5432
    
    server-idp:
        image: quay.io/keycloak/keycloak:latest
        container_name: Server.Identity
        command: start-dev --import-realm
        environment:
            - KEYCLOAK_ADMIN=admin
            - KEYCLOAK_ADMIN_PASSWORD=admin
        volumes:
            - ./.containers/identity:/opt/keycloak/data
            #            - Keycloak finds all `.json` files** in the import directory
            - ./.files:/opt/keycloak/data/import
        #            - ./.files/server-realm-export.json:/opt/keycloak/data/import/server-realm-export.json:ro
        ports:
            - 18080:8080
    
    server-seq:
        image: datalust/seq:latest
        container_name: Server.Seq
        environment:
            - ACCEPT_EULA=Y
            - SEQ_FIRSTRUN_ADMINPASSWORD=slr300hd
        ports:
            - 5341:5341
            - 8081:80
    
    server-redis:
        image: redis:latest
        container_name: Server.Redis
        restart: always
        ports:
            - "6379:6379"